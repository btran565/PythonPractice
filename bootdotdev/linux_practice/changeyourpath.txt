Change Your PATH
A common problem you'll run into in the future is that you install a new program on your machine, but when you try to run it from your terminal, you get an error like:

$ my-new-program
-bash: my-new-program: command not found

Nine times out of ten, it's because the program is installed in a directory that's not in your PATH variable. Oftentimes when you install a program using the CLI, it will print a message during the installation process that tells you where the command was installed. Don't let your eyes glaze over when your terminal prints important messages! Sometimes you just gotta rtfm.

Assignment
Restart your shell session to reset your PATH variable to its default. You can do that by closing your terminal window and opening a new one.
The worldbanc directory that you downloaded has some executables that would be useful to have in your PATH so that you can run them from anywhere.

Add the worldbanc/private/bin directory to your PATH variable. You'll need to add the absolute path, not the relative path. You can get the absolute path by running pwd in the worldbanc/private/bin directory, or by using the realpath command.
To add a directory to your PATH without overwriting all of the existing directories, use the export command and reference the existing PATH variable:

export PATH="$PATH:/path/to/new"

The $PATH part is a reference to the existing PATH variable. The : separates the existing directories from the new directory (/path/to/new) that you're adding.

cd outside of the worldbanc directory entirely. In fact, go to your home directory:
cd ~

Now run the worldbanc.sh shell script (it should work because it's on your PATH). Follow the prompts, then copy/paste the entire interaction with the tool into the input field and submit your answer. (Starting with "Welcome" and ending with "Goodbye!")






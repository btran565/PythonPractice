Piping
One of the most beautiful things about the shell is that you can pipe the output of one program into the input of another program. With this one simple concept, you can run incredibly powerful automation tasks.

Pipe
The pipe operator is |. It's the character that looks like a vertical line. It's usually on the same key as the backslash (\) above the enter key. The pipe operator takes the stdout of the program on the left and "pipes" it into the stdin of the program on the right.

echo "Have you heard the tragedy of Darth Plagueis the Wise?" | wc -w
# 10

In the example above, the echo command sends "Have you heard the tragedy of Darth Plagueis the Wise?" to stdout.

However, instead of that text being sent to your terminal, the pipe operator pipes it into the wc (word count) command. The wc command counts the number of words in the input it receives. The -w flag tells wc to only count words.

This only works because the wc command, like most shell commands, can optionally read from stdin instead of a filepath.

Assignment
We need to figure out just how many transactions "Bob" has been involved in... Bob's looking sus fr.

Use the grep command to find all lines in all of the transactions that include the word "Bob".
You'll want to include all of the files in the worldbanc/private/transactions directory, but not the files in the backups directory. Use the --exclude-dir flag:

grep -R "Bob" PATH_TO_TRANSACTIONS_DIR --exclude-dir="backups"

Pipe the output of that command into the wc -l command to count the number of lines.
Paste the number of transactions (just the number!) into the text field and submit your answer.

Tip
If you got 3002, you made a mistake in a previous step. Ensure the files in transactions match the files in transactions/backups. If not, make a copy.

answer: 3973


